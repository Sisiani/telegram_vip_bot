import json
import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command

API_TOKEN = "8311865694:AAHrQDLSJcFKOztBj8X2PtMafk7U7AML0Uo"
ADMINS = [7374971382]  # آیدی عددی تلگرام خودت

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

USERS_FILE = "users.json"

# تابع برای ذخیره کاربر
def save_user(user_id: int):
    try:
        with open(USERS_FILE, "r") as f:
            users = json.load(f)
    except FileNotFoundError:
        users = []

    if user_id not in users:
        users.append(user_id)
        with open(USERS_FILE, "w") as f:
            json.dump(users, f)


def get_users():
    try:
        with open(USERS_FILE, "r") as f:
            return json.load(f)
    except FileNotFoundError:
        return []


# هندلر استارت
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    save_user(message.from_user.id)
    await message.answer("سلام! خوش اومدی 🌹")


# فقط ادمین بتونه broadcast کنه
@dp.message(Command("broadcast"))
async def cmd_broadcast(message: types.Message):
    if message.from_user.id not in ADMINS:
        return await message.answer("❌ شما دسترسی ندارید")

    await message.answer("پیام خود را ارسال کنید 👇")

    @dp.message(F.chat.id == message.chat.id)  # فقط همین ادمین
    async def get_broadcast(msg: types.Message):
        users = get_users()
        sent = 0
        for user_id in users:
            try:
                await bot.send_message(user_id, msg.text)
                sent += 1
                await asyncio.sleep(0.05)  # برای جلوگیری از اسپم
            except:
                pass
        await msg.answer(f"✅ پیام برای {sent} نفر ارسال شد.")
        dp.message.handlers.unregister(get_broadcast)  # فقط یکبار بگیره
